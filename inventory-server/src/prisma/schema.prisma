//schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(EMPLOYEE)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // üîÅ relation: one user can have many history logs
  historyLogs HistoryLog[]
}

model Product {
  id         String   @id @default(cuid())
  name       String
  sku        String   @unique
  categoryId String
  category   Category @relation(fields: [categoryId], references: [id])
  quantity   Int
  price      Decimal  @db.Decimal(10, 2)
  imageUrl   String?
  barcodeUrl String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // üîÅ relation: one product can appear in many logs
  historyLogs HistoryLog[]
}

model Category {
  id        String    @id @default(cuid())
  name      String    @unique
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

enum Role {
  ADMIN
  EMPLOYEE
}

model Settings {
  id            String   @id @default(cuid())
  stockHigh     Int      @default(100) // above = "In Stock"
  stockModerate Int      @default(50) // below this = "Moderate Stock"
  stockLow      Int      @default(20) // below this = "Low Stock"
  updatedAt     DateTime @updatedAt
}

model HistoryLog {
  id          String        @id @default(cuid())
  productId   String?
  product     Product?      @relation(fields: [productId], references: [id], onDelete: Cascade)
  userId      String?
  user        User?         @relation(fields: [userId], references: [id])
  action      HistoryAction
  details     String
  oldQuantity Int?
  newQuantity Int?
  createdAt   DateTime      @default(now())
}

enum HistoryAction {
  PRODUCT_ADDED
  PRODUCT_EDITED
  PRODUCT_DELETED
  STOCK_INCREASED
  STOCK_DECREASED
  CATEGORY_DELETED
}
